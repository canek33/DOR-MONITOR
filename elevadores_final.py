# -*- coding: utf-8 -*-
"""elevadores_final.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1goqRNM_0tf7RGnTZvknG3EnQsnZKJQ-3
"""

import pandas as pd
import folium
from folium.plugins import MarkerCluster, HeatMap
import branca
from google.colab import drive
from google.colab import files

# Montar Google Drive
drive.mount('/content/drive')

# Ruta al archivo CSV
file_path = '/content/drive/MyDrive/elevadores2.csv'

# Cargar datos del archivo CSV
data = pd.read_csv(file_path)

# Filtrar las columnas necesarias
filtered_data = data[['Unidad_Medica', 'Marca']]

# Generar estadísticas descriptivas solo para las columnas seleccionadas
stats = filtered_data.describe(include='all')

# Crear la tabla HTML a partir de las estadísticas
stats_html = stats.to_html(classes='table table-striped')

# Crear un mapa centrado en México con título
m = folium.Map(location=[23.6345, -102.5528], zoom_start=5)
title_html = '''
             <h3 align="center" style="font-size:20px"><b>Mapeo de Elevadores a Nivel Nacional ISSSTE</b></h3>
             '''
m.get_root().html.add_child(folium.Element(title_html))

# Añadir la tabla de estadísticas al mapa
stats_html = f'''
             <div style="position: fixed;
             bottom: 10px; left: 10px; width: 400px; height: 100px;
             border:2px solid grey; z-index:9999; font-size:12px;
             background-color:white; padding: 10px; overflow-y: scroll;">
             <b>Estadísticas Descriptivas</b>
             {stats_html}
             </div>
             '''
m.get_root().html.add_child(folium.Element(stats_html))

# Crear un cluster de marcadores
marker_cluster = MarkerCluster().add_to(m)

# Colores para cada tipo de elevador
elevator_colors = {
    'OTIS': 'blue',
    'KONE': 'green',
    'SCHINDLER': 'black',
    'MULTIMARCA': 'red',
    'VERTIKA': 'purple',
    'MOVILIFT': 'cadetblue',
    'ORONA': 'darkred',
    'BLT': 'darkgreen',
    'MITSUBISHI': 'darkblue',
    'DESCONOCIDO': 'gray',
    'INTERLIFT': 'lightgreen',
    'MC PUARSA': 'lightblue'
}

# Añadir marcadores al mapa
for idx, row in data.iterrows():
    popup_text = (f"Hospital: {row['Unidad_Medica']}<p>"
                  f"Tipo de elevador: {row['Marca']}<p>"
                  f"Tipo de uso: {row['Uso']}<p>"
                  f"Número de pisos de parada: {row['Paradas']}")
    folium.Marker(
        location=[row['Latitud'], row['Longitud']],
        popup=popup_text,
        icon=folium.Icon(color=elevator_colors.get(row['Marca'], 'gray'))
    ).add_to(marker_cluster)

# Crear el mapa de calor
heat_data = [[row['Latitud'], row['Longitud']] for index, row in data.iterrows()]
HeatMap(heat_data).add_to(m)

# Añadir leyenda al mapa
legend_html = '''
     <div style="position: fixed;
     bottom: 130px; left: 10px; width: 180px; height: 200px;
     border:2px solid grey; z-index:9999; font-size:14px;
     background-color:white; padding: 10px;">
     <b>Tipos de elevadores</b><p>
     <i class="fa fa-map-marker fa-2x" style="color:blue"></i> OTIS<p>
     <i class="fa fa-map-marker fa-2x" style="color:green"></i> KONE<p>
     <i class="fa fa-map-marker fa-2x" style="color:black"></i> SCHINDLER<p>
     <i class="fa fa-map-marker fa-2x" style="color:red"></i> MULTIMARCA
     </div>
     '''
m.get_root().html.add_child(branca.element.Element(legend_html))

# Guardar el mapa en un archivo HTML
map_filename = '/content/mapa_hospitales.html'
m.save(map_filename)

# Descargar el archivo HTML
files.download(map_filename)